var search_data = {"index":{"searchIndex":["mypi","object","unittestlogarithmus","unittestpi","get_n_digit_of_pi()","get_n_digit_of_pi_dual()","initialize()","ln()","ln_iterativ_for()","ln_iterativ_reduce()","ln_rekursiv()","my_pi()","praezisionstest()","setup()","setup()","test_nan()","test_float_values()","test_infinity()","test_negative_float()","test_negative_integer()","test_negative_values()","test_positive()","test_positive_big_bigdecimal()","test_positive_bigdecimal()","test_positive_float()","test_positive_float_out_of_range()","test_positive_integer()","test_postive_dual()","test_string()","test_string_values()"],"longSearchIndex":["mypi","object","unittestlogarithmus","unittestpi","mypi#get_n_digit_of_pi()","mypi#get_n_digit_of_pi_dual()","mypi#initialize()","object#ln()","object#ln_iterativ_for()","object#ln_iterativ_reduce()","object#ln_rekursiv()","mypi#my_pi()","mypi#praezisionstest()","unittestlogarithmus#setup()","unittestpi#setup()","unittestlogarithmus#test_nan()","unittestpi#test_float_values()","unittestlogarithmus#test_infinity()","unittestlogarithmus#test_negative_float()","unittestlogarithmus#test_negative_integer()","unittestpi#test_negative_values()","unittestpi#test_positive()","unittestlogarithmus#test_positive_big_bigdecimal()","unittestlogarithmus#test_positive_bigdecimal()","unittestlogarithmus#test_positive_float()","unittestlogarithmus#test_positive_float_out_of_range()","unittestlogarithmus#test_positive_integer()","unittestpi#test_postive_dual()","unittestlogarithmus#test_string()","unittestpi#test_string_values()"],"info":[["MyPi","","MyPi.html","","<p>Klasse zur Berechnung von PI\n<p>Bei 11 Iterationen der Formel wird die gleiche Genauigkeit wie bei Math::PI\n…\n"],["Object","","Object.html","",""],["UnittestLogarithmus","","UnittestLogarithmus.html","",""],["UnittestPi","","UnittestPi.html","",""],["get_n_digit_of_pi","MyPi","MyPi.html#method-i-get_n_digit_of_pi","(n, system = 10)","<p>Aufgabe 1.2.2 - n-te Nachkommastelle von pi\n<p>Atrributes\n<p><code>n</code> Integer: Wievielte Nachkommastelle\n"],["get_n_digit_of_pi_dual","MyPi","MyPi.html#method-i-get_n_digit_of_pi_dual","(n)","<p>Aufgabe 1.2.3 - n-te Nachkommastelle von Pi in Binaerdarstellung\n"],["initialize","MyPi","MyPi.html#method-i-initialize","()",""],["ln","Object","Object.html#method-i-ln","(a, implementierung = 1)","<p>Reihenentwicklung des natuerlichen Logarithmus\n<p>Implementiert in 3 verschiedenen Varianten\n<p>For-Schleife …\n"],["ln_iterativ_for","Object","Object.html#method-i-ln_iterativ_for","(x, genauigkeit)","<p>Iterativer Ansatz mit klassischer for-schleife\n"],["ln_iterativ_reduce","Object","Object.html#method-i-ln_iterativ_reduce","(x, genauigkeit)","<p>Iterativer Ansatz mit reduce\n<p>Fuer dieses Rechenbeispiel der langsamste Weg\n"],["ln_rekursiv","Object","Object.html#method-i-ln_rekursiv","(x, genauigkeit)","<p>Rekursiver Ansatz.\n<p>Fuer dieses Rechenbeispiel der schnellste Weg\n"],["my_pi","MyPi","MyPi.html#method-i-my_pi","(n = @genauigkeit)","<p>Aufgabe 1.2.1 - Implementierung der Bailey-Borwein-Plouffe-Formel\n"],["praezisionstest","MyPi","MyPi.html#method-i-praezisionstest","()","<p>Aufgabe 1.2.1 - Wie schnell kommen wir auf den gleichen wert wie Math::PI?\n"],["setup","UnittestLogarithmus","UnittestLogarithmus.html#method-i-setup","()","<p>Stellt Testwerte bereit\n"],["setup","UnittestPi","UnittestPi.html#method-i-setup","()","<p>Bereitet die Pi-Klasse vor\n"],["test_NaN","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_NaN","()","<p>Testet, ob bei der Uebergabe von NaN ein korrekter Fehler erzeugt wird\n"],["test_float_values","UnittestPi","UnittestPi.html#method-i-test_float_values","()","<p>Testet, ob fehlerhafte Nachkommastellen einen Fehler ausgeben\n"],["test_infinity","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_infinity","()","<p>Testet, ob bei der Uebergabe von Infinity ein korrekter Fehler erzeugt wird\n"],["test_negative_float","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_negative_float","()","<p>Testet, ob bei negative Floatzahlen ein korrekter Fehler erzeugt wird\n"],["test_negative_integer","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_negative_integer","()","<p>testet, ob bei uebergebenem fehlerhaften Integer ein korrekter Fehler\nerzeugt wird\n"],["test_negative_values","UnittestPi","UnittestPi.html#method-i-test_negative_values","()","<p>Testet, ob negative Nachkommastelle einen Fehler ausgibt\n"],["test_positive","UnittestPi","UnittestPi.html#method-i-test_positive","()","<p>Testet Werte innerhalb des erlaubten Bereiches\n"],["test_positive_big_bigdecimal","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_positive_big_bigdecimal","()","<p>Testet, ob grosse (Lange) Werte von BigDecimal innerhalb des erlaubte\nBereiches einen korrekten Wert …\n"],["test_positive_bigdecimal","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_positive_bigdecimal","()","<p>Testet, ob BigDecimal innerhalb des erlaubte Bereiches einen korrekten Wert\nliefern\n"],["test_positive_float","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_positive_float","()","<p>Testet positive Floatzahlen innerhalb des erlaubten Bereiches\n"],["test_positive_float_out_of_range","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_positive_float_out_of_range","()","<p>Testet, ob bei positive Floatzahlen ausserhalb des erlaubten Bereiches ein\nkorrekter Fehler erzeugt wird …\n"],["test_positive_integer","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_positive_integer","()","<p>testet, ob bei uebergebene Integer innerhalb des erlaubten Bereiches\ntrotzdem einen korrekten Wert geliefert …\n"],["test_postive_dual","UnittestPi","UnittestPi.html#method-i-test_postive_dual","()","<p>Testet auf Nachkommastellen der Bineardarstellung von PI\n"],["test_string","UnittestLogarithmus","UnittestLogarithmus.html#method-i-test_string","()","<p>Testet, ob bei uebergebenem String ein korrekter Fehler erzeugt wird\n"],["test_string_values","UnittestPi","UnittestPi.html#method-i-test_string_values","()","<p>Testet, ob Strings einen Fehler ausgibt\n"]]}}